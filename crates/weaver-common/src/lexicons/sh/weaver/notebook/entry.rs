// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `sh.weaver.notebook.entry` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///The content of the notebook entry. This should be some flavor of Markdown.
    pub content: String,
    ///Client-declared timestamp when this was originally created.
    pub created_at: atrium_api::types::string::Datetime,
    ///The set of images, if any, embedded in the notebook entry.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub images: core::option::Option<crate::sh::weaver::embed::images::Main>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub tags: core::option::Option<crate::sh::weaver::notebook::defs::Tags>,
    pub title: crate::sh::weaver::notebook::defs::Title,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
