// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `sh.weaver.notebook.authors` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    pub author_list: Vec<AuthorListItem>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub created_at: core::option::Option<atrium_api::types::string::Datetime>,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
///A single author in a Weaver notebook.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct AuthorListItemData {
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub index: core::option::Option<i64>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub profile: core::option::Option<
        atrium_api::types::Union<AuthorListItemProfileRefs>,
    >,
}
pub type AuthorListItem = atrium_api::types::Object<AuthorListItemData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum AuthorListItemProfileRefs {
    #[serde(rename = "app.bsky.actor.defs#profileViewBasic")]
    AppBskyActorDefsProfileViewBasic(
        Box<crate::app::bsky::actor::defs::ProfileViewBasic>,
    ),
    #[serde(rename = "sh.weaver.actor.defs#profileView")]
    ShWeaverActorDefsProfileView(Box<crate::sh::weaver::actor::defs::ProfileView>),
}
