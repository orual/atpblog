// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `sh.weaver.embed.images` namespace.
//!A set of images embedded in a blog post.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct MainData {
    pub images: Vec<Image>,
}
pub type Main = atrium_api::types::Object<MainData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ImageData {
    ///alt text description of the image
    pub alt: String,
    ///Blurhash string for the image, used for low-resolution placeholders. This must be a valid Blurhash string.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub blurhash: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub dimensions: core::option::Option<atrium_api::types::Union<ImageDimensionsRefs>>,
    pub image: atrium_api::types::BlobRef,
}
pub type Image = atrium_api::types::Object<ImageData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum ImageDimensionsRefs {
    #[serde(rename = "app.bsky.embed.defs#aspectRatio")]
    AppBskyEmbedDefsAspectRatio(Box<crate::app::bsky::embed::defs::AspectRatio>),
    #[serde(rename = "sh.weaver.embed.defs#percentSize")]
    ShWeaverEmbedDefsPercentSize(Box<crate::sh::weaver::embed::defs::PercentSize>),
    #[serde(rename = "sh.weaver.embed.defs#pixelSize")]
    ShWeaverEmbedDefsPixelSize(Box<crate::sh::weaver::embed::defs::PixelSize>),
}
