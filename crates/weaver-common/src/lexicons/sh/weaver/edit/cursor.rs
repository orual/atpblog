// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `sh.weaver.edit.cursor` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    pub container: ContainerId,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub id: core::option::Option<Id>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub side: core::option::Option<CursorSide>,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ContainerIdData {
    pub value: atrium_api::types::Union<ContainerIdValueRefs>,
}
pub type ContainerId = atrium_api::types::Object<ContainerIdData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct CursorSideData {
    ///The side of an item the cursor is on (left = -1, right = 1, middle = 0)
    pub value: i64,
}
pub type CursorSide = atrium_api::types::Object<CursorSideData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct IdData {
    pub counter: i64,
    pub peer: i64,
}
pub type Id = atrium_api::types::Object<IdData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct NormalContainerIdData {
    pub container_type: String,
    pub counter: i64,
    pub peer: i64,
}
pub type NormalContainerId = atrium_api::types::Object<NormalContainerIdData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RootContainerIdData {
    pub container_type: String,
    pub name: String,
}
pub type RootContainerId = atrium_api::types::Object<RootContainerIdData>;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum ContainerIdValueRefs {
    #[serde(rename = "sh.weaver.edit.cursor#normalContainerId")]
    NormalContainerId(Box<NormalContainerId>),
    #[serde(rename = "sh.weaver.edit.cursor#rootContainerId")]
    RootContainerId(Box<RootContainerId>),
}
