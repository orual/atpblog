// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `sh.tangled.actor.profile` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///Include link to this account on Bluesky.
    pub bluesky: bool,
    ///Free-form profile description text.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub description: core::option::Option<String>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub links: core::option::Option<Vec<String>>,
    ///Free-form location text.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub location: core::option::Option<String>,
    ///Any ATURI, it is up to appviews to validate these fields.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub pinned_repositories: core::option::Option<Vec<String>>,
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub stats: core::option::Option<Vec<String>>,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
